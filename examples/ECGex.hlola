format CSV
use theory ECG
use library Utils
use library Lola
use innerspec headismax

input Double ecg_measurement
input Int timestamp

define (Double, (D2, D2)) bandpassed_all = let
  butterargs = ((0.16020035, 0, -0.16020035), (1, -1.6795993, 0.6795993))
  in '(iir_df1 butterargs) bp_st [-1|'((0,0),(0,0))] ecg_measurement[now]
define Double bandpassed = 'fst bandpassed_all[now]
define (D2, D2) bp_st = 'snd bandpassed_all[now]

define Double stompedbandpassed = if instantN[now] <= 5 then stompedbandpassed [-1|bandpassed [5| 'undefined]] else bandpassed[now]

define Double differentiated = stompedbandpassed [1| stompedbandpassed[now]] - stompedbandpassed[now]
define Double squared = '(^2) differentiated[now]
define Double convolved = convolved [-1|0] + squared[now] - squared [-15|0]

define [Double] rprev50 = 'shift rprev50 [-1| '(replicate 50 (-1e-6))] convolved[now]
  where shift r x = x:init r
define Bool peak_candidate = let
  nextm50 = convolved [:50]
  in convolved[now]>0.35 && 'headisspike rprev50[now] && 'headisspike nextm50
  where
  headisspike = runSpec.headismax

define Bool ispeak = peak_candidate[now] && instantN[now] - last_qrs_index[now] > 120
define Bool isqrs = convolved[now] > threshold_value[now]
output Bool is_qrs_peak = isqrs[now] && ispeak[now]
define Double qrs_peak_value = let
  qrs_peak_filtering_factor = 0.125
  in if ispeak[now] && isqrs[now] then qrs_peak_filtering_factor * convolved[now] + (1 - qrs_peak_filtering_factor) * qrs_peak_value [-1|0] else qrs_peak_value [-1|0]
define Double noise_peak_value = let
  noise_peak_filtering_factor = 0.125
  in if ispeak[now] && not isqrs[now] then noise_peak_filtering_factor * convolved[now] + (1 - noise_peak_filtering_factor) * noise_peak_value [-1|0] else noise_peak_value [-1|0]
define Double next_threshold_value = if ispeak[now] then noise_peak_value[now] + 0.25 * (qrs_peak_value[now] - noise_peak_value[now]) else threshold_value [-1|0]
define Double threshold_value = next_threshold_value [-1|0]
define Int last_qrs_index = next_last_qrs_index [-1|-120]
define Int next_last_qrs_index = if ispeak[now] && isqrs[now] then instantN[now] else last_qrs_index[now]

output Int ts = timestamp[now]
